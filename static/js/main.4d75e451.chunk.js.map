{"version":3,"sources":["components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["TodoInfo","email","todo","id","title","completed","userRef","name","className","classNames","href","TodoList","todos","map","todoItem","username","userId","App","useState","selectedUser","setSelectedUser","titleField","setTitleField","todosFromServer","initialTodos","setInitialTodos","touched","setTouched","titleError","length","selectedError","showTitleError","showSelectedError","expandedTodos","usersFromServer","find","user","onSubmit","event","preventDefault","action","method","htmlFor","type","placeholder","value","onChange","target","disabled","onClick","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d75e451.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { ExpandedTodo } from '../../types/ExpandedTodo';\n\ntype Props = {\n  todo: ExpandedTodo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    userRef,\n  } = todo;\n\n  let name = 'unknown User';\n  let email;\n\n  if (userRef) {\n    name = userRef.name;\n    email = userRef.email;\n  }\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <a className=\"UserInfo\" href={`mailto:${email || ''}`}>\n        {name}\n      </a>\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { ExpandedTodo } from '../../types/ExpandedTodo';\n\ntype Props = {\n  todos: ExpandedTodo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todoItem => (<TodoInfo key={todoItem.id} todo={todoItem} />))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nexport const App: React.FC = () => {\n  const [selectedUser, setSelectedUser] = useState('');\n  const [titleField, setTitleField] = useState('');\n  const [initialTodos, setInitialTodos] = useState(todosFromServer);\n  const [touched, setTouched] = useState(false);\n\n  const titleError = titleField.length === 0;\n  const selectedError = selectedUser.length === 0;\n\n  const showTitleError = titleError && touched;\n  const showSelectedError = selectedError && touched;\n\n  const addTodo = () => {\n    setInitialTodos(currentTodos => {\n      return [\n        ...currentTodos,\n        {\n          id: currentTodos.length + 1,\n          title: titleField,\n          completed: false,\n          userId: +selectedUser,\n        },\n      ];\n    });\n  };\n\n  const clearForm = () => {\n    setTitleField('');\n    setSelectedUser('');\n    setTouched(false);\n  };\n\n  const handleAdd = () => {\n    setTouched(true);\n\n    if (titleError || selectedError) {\n      return;\n    }\n\n    addTodo();\n    clearForm();\n  };\n\n  const expandedTodos = initialTodos.map(todo => {\n    return {\n      ...todo,\n      userRef: usersFromServer.find(user => (user.id === todo.userId)) || null,\n    };\n  });\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        onSubmit={event => event.preventDefault()}\n        action=\"/api/users\"\n        method=\"POST\"\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            Title:&nbsp;\n            <input\n              id=\"title\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={titleField}\n              onChange={event => (setTitleField(event.target.value))}\n            />\n          </label>\n          {showTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">\n            User:&nbsp;\n            <select\n              data-cy=\"userSelect\"\n              value={selectedUser}\n              onChange={event => (setSelectedUser(event.target.value))}\n            >\n              <option value=\"\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option\n                  value={user.id}\n                  key={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n          {showSelectedError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={handleAdd}\n        >\n          Add\n        </button>\n        <TodoList todos={expandedTodos} />\n      </form>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}